; Program pltPc
; This program generates a contour plot of the specific entropy
; (in the equatorial plane) generated by the program TPMapc.f.
; It is based on the IDL program plttpmapc.  It also plots the
; magnetopause used by the program.  That portion of the program
; is based on the program mpcross.
; Version 4b
; This version is designed to work with the new magnetopause
; crossing detection logic first introduced in Version 5 of CalcPc.
; It also is designed to work with the non-uniform grid in rho 
; (introduced in Versions 2 and 2b of Initmapc).
; by Fred Hall, IV and Antonius Otto
; circa 17 September 2000


Function rhoindex,rho0

common rzcomm,rhomin,drho

  rhoindex=FIX((rho0-rhomin)/drho)
  return,rhoindex

End


Function phiindex,phi0

common pzcomm,phimin,dphi

  phiindex=FIX((phi0-phimin)/dphi)
  return,phiindex

End



; Begin Main Program
Pro pltPc,ps=ps

; Initialize some variables
; Note that IDL uses long (l) integers with unformatted data.

common rzcomm,rhomin,drho
common pzcomm,phimin,dphi

rhomin=-40.0
rhomin2=rhomin
rhomax=15.0
rhomax2=rhomax
nrho=110l
nrho2=nrho
phimin=-25.0
phimin2=phimin
phimax=25.0
phimax2=phimax
nphi=100l
nphi2=nphi
YEAR=1980l
YEAR2=YEAR
IDAY=50l
IDAY2=IDAY
UTHOUR=21l
UTHOUR2=UTHOUR
MINUTE=0l
MINUTE2=MINUTE
SECOND=0l
SECOND2=SECOND
IOPT=1l
IOPT2=IOPT
psub=0.0
continue='p'
totcross=500
pi=3.141592654
mismatch=0
tgchoice='n'
TsyPinit=-1.0e5
noplt=1.7e5



PARMOD=fltarr(4)
PARMOD2=PARMOD

; Open data file and obtain preliminary parameter data.
openr,4,'tpmpc.bin',/F77_UNFORMATTED
readu,4,rhomin
readu,4,rhomax
readu,4,nrho
readu,4,phimin
readu,4,phimax
readu,4,nphi
readu,4,YEAR
readu,4,IDAY
readu,4,UTHOUR
readu,4,MINUTE
readu,4,SECOND
for n=1,4 do begin
  readu,4,psub
  PARMOD(n-1)=psub
endfor
readu,4,IOPT

; Define coordinate and data matrices
rho=findgen(nrho+1)
kappa=alog(rhomax/rhomin)/nrho
rho=rhomin*exp(kappa*rho)
rho(0)=rhomin
rho(nrho)=rhomax
phi=findgen(nphi+1)
dphi=(phimax-phimin)/nphi
phi=phi*dphi+phimin
tacrho=phi
P=fltarr(nrho+1,nphi+1,/NOZERO)

; Read in the data
readu,4,P

close,4

; Open data file and obtain preliminary parameter data.
openr,5,'tpmmcc2.bin',/F77_UNFORMATTED
readu,5,rhomin2
if (rhomin2 NE rhomin) then mismatch=1
readu,5,rhomax2
if (rhomax2 NE rhomax) then mismatch=1
readu,5,nrho2
if (nrho2 NE nrho) then mismatch=1
readu,5,phimin2
if (phimin2 NE phimin) then mismatch=1
readu,5,phimax2
if (phimax2 NE phimax) then mismatch=1
readu,5,nphi2
if (nphi2 NE nphi) then mismatch=1
readu,5,YEAR2
if (YEAR2 NE YEAR) then mismatch=1
readu,5,IDAY2
if (IDAY2 NE IDAY) then mismatch=1
readu,5,UTHOUR2
if (UTHOUR2 NE UTHOUR) then mismatch=1
readu,5,MINUTE2
if (MINUTE2 NE MINUTE) then mismatch=1
readu,5,SECOND2
if (SECOND2 NE SECOND) then mismatch=1
for n=1,4 do begin
  readu,5,psub
  PARMOD2(n-1)=psub
  if (PARMOD2(n-1) NE PARMOD(n-1)) then mismatch=1
endfor
readu,5,IOPT2
if (IOPT2 NE IOPT) then mismatch=1

if (mismatch EQ 1) then print, 'A data mismatch has been detected.'

readu,5,totcross
print,'totcross = ',totcross

; Define additional data matrices
stcross=lonarr(nphi+1)
mpccrho=fltarr(totcross)
mpccphi=mpccrho

; Read in the data
readu,5,stcross

close,5


; Obtain the actual magnetopause crossings
mpcounter=0
print,'nrho = ',nrho
print,'nphi = ',nphi
for kmpc=0,nphi do $
  if (stcross(kmpc) ne nrho) then begin $
    print,'stcross = ',stcross(kmpc),$
          '(',kmpc,'):   mpcounter = ',mpcounter         
    mpccrho(mpcounter)=rho(stcross(kmpc))
    mpccphi(mpcounter)=phi(kmpc)
    mpcounter=mpcounter+1
  endif
tc1=mpccrho(0:(totcross/2-1)) & tc2=mpccrho(totcross/2:totcross-1)
tc1=smooth(tc1,3) & tc2=smooth(tc2,3)
mpccrho(0:(totcross/2-1))=tc1 & mpccrho(totcross/2:totcross-1)=tc2
print
print,'Magnetopause crossings:'
print,'mpccrho:'
print,mpccrho
print
print,'mpccphi:'
print,mpccphi
print
  
;print,P(*,nphi/2)
; Clip the plot
for i=0,nrho do begin
  for j=0,nphi do begin
    if (P(i,j) eq TsyPinit) then P(i,j) = noplt
    if ((P(i,j) lt 0.0) AND (P(i,j) ne noplt)) then begin $
      print, 'P(',i,',',j,') = ',P(i,j)
    endif
  endfor
endfor
for kmpc=0,nphi do $
  if (stcross(kmpc) ne nrho) then begin $
      ir=stcross(kmpc)-1
;      print,ir
      while ( (P(ir,kmpc) gt P(ir+1,kmpc)) and (ir lt nrho-1)) do ir=ir+1 
;        print,ir,P(ir,kmpc),P(ir+1,kmpc)
;      endwhile
      for i=ir+1,nrho do P(i,kmpc)=1.5*P(i-1,kmpc)
  endif
;P=smooth(P,3)
;print,P(*,nphi/2)



print
print
print, 'Press Enter to continue.'
read, continue
print
print


; Enable printer if specified
if keyword_set(ps) then begin
  set_plot,'ps'
  device,/portrait
  device,/inches,xsize=7.0,ysize=7.0,xoffset=0.5,yoffset=2.0
  device,filename='pltPc.ps'
endif

; Generate the plot

; plot,/POLAR,rho,phi
print, 'rho:'
print,rho
print
print
print, 'phi:'
print,phi
print
print
print

print, '!P.THICK = ',!P.THICK

polar_contour,transpose(P),phi,rho, $
; /T3D,/NOERASE,/SAVE $
  TITLE='Tsyganenko T96_01 Pressure Distribution', $
  XTITLE='x (R!DE!N)',YTITLE='y (R!DE!N)', $
  XRANGE=[-45,15],YRANGE=[-30,30], $
  XSTYLE=1,YSTYLE=1, $
  LEVELS=[0.08,0.1,0.2,1.0,5.0], $
  C_LABELS=[1,1,1,1,6], $
  C_LINESTYLE=[0,2,0,3,0], $
  C_THICK=[1,1,1,3,1]
; ZVALUE=1.0,MAX_VAL=20

oplot,mpccrho,mpccphi,/POLAR,PSYM=2,THICK=4

; oplot,[-7.0,-7.0],[-40.0,20.0],THICK=2,LINE=1
; oplot,[-15.0,-15.0],[-40.0,20.0],THICK=2,LINE=1

; Overlay tactical grid
print,'nrho = ',nrho
print,'rho(0) = ',rho(0)
print,'rho(nrho) = ', rho(nrho)
print
print,'nphi = ',nphi
print,'phi(0) = ',phi(0)
print,'phi(nphi) = ',phi(nphi)
print,'Would you like a tactical grid overlay of the plot? (y/n)'
repeat begin
  read,tgchoice
endrep until ((tgchoice EQ 'y') OR (tgchoice EQ 'n'))
if (tgchoice EQ 'y') then begin
  for j=0,nphi do begin
    oplot,[rho(0),rho(nrho)],[phi(j),phi(j)],/POLAR,LINESTYLE=0
  endfor
  for i=0,nrho do begin
    tacrho(*)=rho(i)
    oplot,tacrho,phi,/POLAR,LINESTYLE=0
  endfor
endif




print,max(P)
print,min(P)
print,min(abs(P))


; Close printer device if opened and reset normal plotting
if keyword_set(ps) then begin
  device,/close
  set_plot,'x'
endif

end
